C251 COMPILER V5.60.0,  main                                                               17/03/25  23:54:32  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE main.c XSMALL INTR2 BROWSE DEBUG TABS(2) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- Web: www.STCAI.com ---------------------------------------------*/
    3          /*---------------------------------------------------------------------*/
    4          
    5          /*************  ¹¦ÄÜËµÃ÷    **************
    6          
    7          ±¾Àý³Ì»ùÓÚAI8051UÎªÖ÷¿ØÐ¾Æ¬µÄÊµÑéÏä½øÐÐ±àÐ´²âÊÔ¡£
    8          
    9          Ê¹ÓÃKeil C251±àÒëÆ÷£¬Memory ModelÍÆ¼öÉèÖÃXSmallÄ£Ê½£¬Ä¬ÈÏ¶¨Òå±äÁ¿ÔÚedata£¬µ¥Ê±ÖÓ´æÈ¡·ÃÎÊËÙ¶È¿ì¡£
   10          
   11          edata½¨Òé±£Áô1K¸ø¶ÑÕ»Ê¹ÓÃ£¬¿Õ¼ä²»¹»Ê±¿É½«´óÊý×é¡¢²»³£ÓÃ±äÁ¿¼Óxdata¹Ø¼ü×Ö¶¨Òåµ½xdata¿Õ¼ä¡£
   12          
   13          ±¾³ÌÐòÑÝÊ¾5¸ö¶¨Ê±Æ÷µÄÊ¹ÓÃ, ±¾Àý³Ì¾ùÊ¹ÓÃ16Î»×Ô¶¯ÖØ×°.
   14          
   15          ¶¨Ê±Æ÷0×ö16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÆµÂÊÎª1000HZ£¬ÖÐ¶Ïº¯Êý´ÓP0.7È¡·´Êä³ö500HZ·½²¨ÐÅºÅ.
   16          
   17          ¶¨Ê±Æ÷1×ö16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÆµÂÊÎª2000HZ£¬ÖÐ¶Ïº¯Êý´ÓP0.6È¡·´Êä³ö1000HZ·½²¨ÐÅºÅ.
   18          
   19          ¶¨Ê±Æ÷2×ö16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÆµÂÊÎª3000HZ£¬ÖÐ¶Ïº¯Êý´ÓP0.5È¡·´Êä³ö1500HZ·½²¨ÐÅºÅ.
   20          
   21          ¶¨Ê±Æ÷3×ö16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÆµÂÊÎª4000HZ£¬ÖÐ¶Ïº¯Êý´ÓP0.4È¡·´Êä³ö2000HZ·½²¨ÐÅºÅ.
   22          
   23          ¶¨Ê±Æ÷4×ö16Î»×Ô¶¯ÖØ×°, ÖÐ¶ÏÆµÂÊÎª5000HZ£¬ÖÐ¶Ïº¯Êý´ÓP0.3È¡·´Êä³ö2500HZ·½²¨ÐÅºÅ.
   24          
   25          ÏÂÔØÊ±, Ñ¡ÔñÊ±ÖÓ 24MHZ (ÓÃ»§¿É×ÔÐÐÐÞ¸ÄÆµÂÊ).
   26          
   27          ******************************************/
   28          
   29          #include "..\..\comm\AI8051U.h"
   30          #include "stdio.h"
   31          #include "intrins.h"
   32          
   33          typedef   unsigned char u8;
   34          typedef   unsigned int  u16;
   35          typedef   unsigned long u32;
   36          
   37          #define MAIN_Fosc        24000000UL
   38          
   39          //==========================================================================
   40          
   41          #define Timer0_Reload   (MAIN_Fosc / 65)      //Timer 0 ÖÐ¶ÏÆµÂÊ, 1000´Î/Ãë
   42          #define Timer1_Reload   (MAIN_Fosc / 2000)      //Timer 1 ÖÐ¶ÏÆµÂÊ, 2000´Î/Ãë
   43          #define Timer2_Reload   (MAIN_Fosc / 3000)      //Timer 2 ÖÐ¶ÏÆµÂÊ, 3000´Î/Ãë
   44          #define Timer3_Reload   (MAIN_Fosc / 4000)      //Timer 3 ÖÐ¶ÏÆµÂÊ, 4000´Î/Ãë
   45          #define Timer4_Reload   (MAIN_Fosc / 5000)      //Timer 4 ÖÐ¶ÏÆµÂÊ, 5000´Î/Ãë
   46          
   47          void    Timer0_init(void);
   48          void    Timer1_init(void);
   49          void    Timer2_init(void);
   50          void    Timer3_init(void);
   51          void    Timer4_init(void);
   52          
   53          /******************** Ö÷º¯Êý **************************/
   54          void main(void)
   55          {
   56   1          WTST = 0;  //ÉèÖÃ³ÌÐòÖ¸ÁîÑÓÊ±²ÎÊý£¬¸³ÖµÎª0¿É½«CPUÖ´ÐÐÖ¸ÁîµÄËÙ¶ÈÉèÖÃÎª×î¿ì
   57   1          EAXFR = 1; //À©Õ¹¼Ä´æÆ÷(XFR)·ÃÎÊÊ¹ÄÜ
   58   1          CKCON = 0; //Ìá¸ß·ÃÎÊXRAMËÙ¶È
   59   1      
C251 COMPILER V5.60.0,  main                                                               17/03/25  23:54:32  PAGE 2   

   60   1          P0M1 = 0x00;   P0M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
   61   1          P1M1 = 0x00;   P1M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
   62   1          P2M1 = 0x00;   P2M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
   63   1          P3M1 = 0x00;   P3M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
   64   1          P4M1 = 0x00;   P4M0 = 0x0b;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
   65   1          P5M1 = 0x00;   P5M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
   66   1          P6M1 = 0x00;   P6M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
   67   1          P7M1 = 0x00;   P7M0 = 0x00;   //ÉèÖÃÎª×¼Ë«Ïò¿Ú
   68   1      
   69   1          EA = 1;     //´ò¿ª×ÜÖÐ¶Ï
   70   1          P40 = 0;    //´ò¿ªLEDµçÔ´
   71   1          
   72   1          Timer0_init();
   73   1          Timer1_init();
   74   1          Timer2_init();
   75   1          Timer3_init();
   76   1          Timer4_init();
   77   1      
   78   1          while (1);
   79   1      }
   80          
   81          //========================================================================
   82          // º¯Êý: void Timer0_init(void)
   83          // ÃèÊö: timer0³õÊ¼»¯º¯Êý.
   84          // ²ÎÊý: none.
   85          // ·µ»Ø: none.
   86          // °æ±¾: V1.0, 2015-1-12
   87          //========================================================================
   88          void Timer0_init(void)
   89          {
   90   1              TR0 = 0;    //Í£Ö¹¼ÆÊý
   91   1      
   92   1          #if (Timer0_Reload < 64)    // Èç¹ûÓÃ»§ÉèÖÃÖµ²»ºÏÊÊ£¬ Ôò²»Æô¶¯¶¨Ê±Æ÷
                       #error "Timer0ÉèÖÃµÄÖÐ¶Ï¹ý¿ì!"
               
                   #elif ((Timer0_Reload/12) < 65536UL)    // Èç¹ûÓÃ»§ÉèÖÃÖµ²»ºÏÊÊ£¬ Ôò²»Æô¶¯¶¨Ê±Æ÷
   96   1              ET0 = 1;    //ÔÊÐíÖÐ¶Ï
   97   1          //  PT0 = 1;    //¸ßÓÅÏÈ¼¶ÖÐ¶Ï
   98   1              TMOD &= ~0x03;
   99   1              TMOD |= 0;  //¹¤×÷Ä£Ê½, 0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯ÖØ×°, 3: 16Î»×Ô¶¯ÖØ×°, ²»¿ÉÆ
             -Á±ÎÖÐ¶Ï
  100   1          //  T0_CT = 1;  //¼ÆÊý
  101   1              T0_CT = 0;  //¶¨Ê±
  102   1          //  T0CLKO = 1; //Êä³öÊ±ÖÓ
  103   1              T0CLKO = 0; //²»Êä³öÊ±ÖÓ
  104   1      
  105   1              #if (Timer0_Reload < 65536UL)
                           T0x12 = 1;  //1T mode
                           TH0 = (u8)((65536UL - Timer0_Reload) / 256);
                           TL0 = (u8)((65536UL - Timer0_Reload) % 256);
                       #else
  110   1                  T0x12 = 0;  //12T mode
  111   1                  TH0 = (u8)((65536UL - Timer0_Reload/12) / 256);
  112   1                  TL0 = (u8)((65536UL - Timer0_Reload/12) % 256);
  113   1              #endif
  114   1      
  115   1              TR0 = 1;    //¿ªÊ¼ÔËÐÐ
  116   1      
  117   1          #else
                       #error "Timer0ÉèÖÃµÄÖÐ¶Ï¹ýÂý!"
                   #endif
  120   1      }
  121          
  122          //========================================================================
  123          // º¯Êý: void Timer1_init(void)
  124          // ÃèÊö: timer1³õÊ¼»¯º¯Êý.
C251 COMPILER V5.60.0,  main                                                               17/03/25  23:54:32  PAGE 3   

  125          // ²ÎÊý: none.
  126          // ·µ»Ø: none.
  127          // °æ±¾: V1.0, 2015-1-12
  128          //========================================================================
  129          void Timer1_init(void)
  130          {
  131   1              TR1 = 0;    //Í£Ö¹¼ÆÊý
  132   1      
  133   1          #if (Timer1_Reload < 64)    // Èç¹ûÓÃ»§ÉèÖÃÖµ²»ºÏÊÊ£¬ Ôò²»Æô¶¯¶¨Ê±Æ÷
                       #error "Timer1ÉèÖÃµÄÖÐ¶Ï¹ý¿ì!"
               
                   #elif ((Timer1_Reload/12) < 65536UL)    // Èç¹ûÓÃ»§ÉèÖÃÖµ²»ºÏÊÊ£¬ Ôò²»Æô¶¯¶¨Ê±Æ÷
  137   1              ET1 = 1;    //ÔÊÐíÖÐ¶Ï
  138   1          //  PT1 = 1;    //¸ßÓÅÏÈ¼¶ÖÐ¶Ï
  139   1              TMOD &= ~0x30;
  140   1              TMOD |= (0 << 4);   //¹¤×÷Ä£Ê½, 0: 16Î»×Ô¶¯ÖØ×°, 1: 16Î»¶¨Ê±/¼ÆÊý, 2: 8Î»×Ô¶¯ÖØ×°
  141   1          //  T1_CT = 1;  //¼ÆÊý
  142   1              T1_CT = 0;  //¶¨Ê±
  143   1          //  T1CLKO = 1; //Êä³öÊ±ÖÓ
  144   1              T1CLKO = 0; //²»Êä³öÊ±ÖÓ
  145   1      
  146   1              #if (Timer1_Reload < 65536UL)
  147   1                  T1x12 = 1;  //1T mode
  148   1                  TH1 = (u8)((65536UL - Timer1_Reload) / 256);
  149   1                  TL1 = (u8)((65536UL - Timer1_Reload) % 256);
  150   1              #else
                           T1x12 = 0;  //12T mode
                           TH1 = (u8)((65536UL - Timer1_Reload/12) / 256);
                           TL1 = (u8)((65536UL - Timer1_Reload/12) % 256);
                       #endif
  155   1      
  156   1              TR1 = 1;    //¿ªÊ¼ÔËÐÐ
  157   1      
  158   1          #else
                       #error "Timer1ÉèÖÃµÄÖÐ¶Ï¹ýÂý!"
                   #endif
  161   1      }
  162          
  163          //========================================================================
  164          // º¯Êý: void Timer2_init(void)
  165          // ÃèÊö: timer2³õÊ¼»¯º¯Êý.
  166          // ²ÎÊý: none.
  167          // ·µ»Ø: none.
  168          // °æ±¾: V1.0, 2015-1-12
  169          //========================================================================
  170          void Timer2_init(void)
  171          {
  172   1              T2R = 0;    //Í£Ö¹¼ÆÊý
  173   1      
  174   1          #if (Timer2_Reload < 64)    // Èç¹ûÓÃ»§ÉèÖÃÖµ²»ºÏÊÊ£¬ Ôò²»Æô¶¯¶¨Ê±Æ÷
                       #error "Timer2ÉèÖÃµÄÖÐ¶Ï¹ý¿ì!"
               
                   #elif ((Timer2_Reload/12) < 65536UL)    // Èç¹ûÓÃ»§ÉèÖÃÖµ²»ºÏÊÊ£¬ Ôò²»Æô¶¯¶¨Ê±Æ÷
  178   1              ET2 = 1;    //ÔÊÐíÖÐ¶Ï
  179   1          //  T2_CT = 1;  //¼ÆÊý
  180   1              T2_CT = 0;  //¶¨Ê±
  181   1          //  T2CLKO = 1; //Êä³öÊ±ÖÓ
  182   1              T2CLKO = 0; //²»Êä³öÊ±ÖÓ
  183   1      
  184   1              #if (Timer2_Reload < 65536UL)
  185   1                  T2x12 = 1;    //1T mode
  186   1                  T2H = (u8)((65536UL - Timer2_Reload) / 256);
  187   1                  T2L = (u8)((65536UL - Timer2_Reload) % 256);
  188   1              #else
                           T2x12 = 0;    //12T mode
                           T2H = (u8)((65536UL - Timer2_Reload/12) / 256);
C251 COMPILER V5.60.0,  main                                                               17/03/25  23:54:32  PAGE 4   

                           T2L = (u8)((65536UL - Timer2_Reload/12) % 256);
                       #endif
  193   1      
  194   1              T2R = 1;    //¿ªÊ¼ÔËÐÐ
  195   1      
  196   1          #else
                       #error "Timer2ÉèÖÃµÄÖÐ¶Ï¹ýÂý!"
                   #endif
  199   1      }
  200          
  201          //========================================================================
  202          // º¯Êý: void Timer3_init(void)
  203          // ÃèÊö: timer3³õÊ¼»¯º¯Êý.
  204          // ²ÎÊý: none.
  205          // ·µ»Ø: none.
  206          // °æ±¾: V1.0, 2015-1-12
  207          //========================================================================
  208          void Timer3_init(void)
  209          {
  210   1              T3R = 0;    //Í£Ö¹¼ÆÊý
  211   1      
  212   1          #if (Timer3_Reload < 64)    // Èç¹ûÓÃ»§ÉèÖÃÖµ²»ºÏÊÊ£¬ Ôò²»Æô¶¯¶¨Ê±Æ÷
                       #error "Timer3ÉèÖÃµÄÖÐ¶Ï¹ý¿ì!"
               
                   #elif ((Timer3_Reload/12) < 65536UL)    // Èç¹ûÓÃ»§ÉèÖÃÖµ²»ºÏÊÊ£¬ Ôò²»Æô¶¯¶¨Ê±Æ÷
  216   1              ET3 = 1;    //ÔÊÐíÖÐ¶Ï
  217   1          //  T3_CT = 1;  //¼ÆÊý
  218   1              T3_CT = 0;  //¶¨Ê±
  219   1          //  T3CLKO = 1; //Êä³öÊ±ÖÓ
  220   1              T3CLKO = 0; //²»Êä³öÊ±ÖÓ
  221   1      
  222   1              #if (Timer3_Reload < 65536UL)
  223   1                  T3x12 = 1;    //1T mode
  224   1                  T3H = (u8)((65536UL - Timer3_Reload) / 256);
  225   1                  T3L = (u8)((65536UL - Timer3_Reload) % 256);
  226   1              #else
                           T3x12 = 0;    //12T mode
                           T3H = (u8)((65536UL - Timer3_Reload/12) / 256);
                           T3L = (u8)((65536UL - Timer3_Reload/12) % 256);
                       #endif
  231   1      
  232   1              T3R = 1;    //¿ªÊ¼ÔËÐÐ
  233   1      
  234   1          #else
                       #error "Timer3ÉèÖÃµÄÖÐ¶Ï¹ýÂý!"
                   #endif
  237   1      }
  238          
  239          //========================================================================
  240          // º¯Êý: void Timer4_init(void)
  241          // ÃèÊö: timer4³õÊ¼»¯º¯Êý.
  242          // ²ÎÊý: none.
  243          // ·µ»Ø: none.
  244          // °æ±¾: V1.0, 2015-1-12
  245          //========================================================================
  246          void Timer4_init(void)
  247          {
  248   1              T4R = 0;    //Í£Ö¹¼ÆÊý
  249   1      
  250   1          #if (Timer4_Reload < 64)    // Èç¹ûÓÃ»§ÉèÖÃÖµ²»ºÏÊÊ£¬ Ôò²»Æô¶¯¶¨Ê±Æ÷
                       #error "Timer4ÉèÖÃµÄÖÐ¶Ï¹ý¿ì!"
               
                   #elif ((Timer4_Reload/12) < 65536UL)    // Èç¹ûÓÃ»§ÉèÖÃÖµ²»ºÏÊÊ£¬ Ôò²»Æô¶¯¶¨Ê±Æ÷
  254   1              ET4 = 1;    //ÔÊÐíÖÐ¶Ï
  255   1          //  T4_CT = 1;  //¼ÆÊý
  256   1              T4_CT = 0;  //¶¨Ê±
C251 COMPILER V5.60.0,  main                                                               17/03/25  23:54:32  PAGE 5   

  257   1          //  T4CLKO = 1; //Êä³öÊ±ÖÓ
  258   1              T4CLKO = 0; //²»Êä³öÊ±ÖÓ
  259   1      
  260   1              #if (Timer4_Reload < 65536UL)
  261   1                  T4x12 = 1;    //1T mode
  262   1                  T4H = (u8)((65536UL - Timer4_Reload) / 256);
  263   1                  T4L = (u8)((65536UL - Timer4_Reload) % 256);
  264   1              #else
                           T4x12 = 0;    //12T mode
                           T4H = (u8)((65536UL - Timer4_Reload/12) / 256);
                           T4L = (u8)((65536UL - Timer4_Reload/12) % 256);
                       #endif
  269   1      
  270   1              T4R = 1;    //¿ªÊ¼ÔËÐÐ
  271   1      
  272   1          #else
                       #error "Timer4ÉèÖÃµÄÖÐ¶Ï¹ýÂý!"
                   #endif
  275   1      }
  276          
  277          //========================================================================
  278          // º¯Êý: void timer0_int (void) interrupt TIMER0_VECTOR
  279          // ÃèÊö:  timer0ÖÐ¶Ïº¯Êý.
  280          // ²ÎÊý: none.
  281          // ·µ»Ø: none.
  282          // °æ±¾: V1.0, 2015-1-12
  283          //========================================================================
  284          void timer0_int (void) interrupt 1
  285          {
  286   1         P07 = ~P07;
  287   1      }
  288          
  289          //========================================================================
  290          // º¯Êý: void timer1_int (void) interrupt TIMER1_VECTOR
  291          // ÃèÊö:  timer1ÖÐ¶Ïº¯Êý.
  292          // ²ÎÊý: none.
  293          // ·µ»Ø: none.
  294          // °æ±¾: V1.0, 2015-1-12
  295          //========================================================================
  296          void timer1_int (void) interrupt 3
  297          {
  298   1         P06 = ~P06;
  299   1      }
  300          
  301          //========================================================================
  302          // º¯Êý: void timer2_int (void) interrupt TIMER2_VECTOR
  303          // ÃèÊö:  timer2ÖÐ¶Ïº¯Êý.
  304          // ²ÎÊý: none.
  305          // ·µ»Ø: none.
  306          // °æ±¾: V1.0, 2015-1-12
  307          //========================================================================
  308          void timer2_int (void) interrupt 12
  309          {
  310   1          P05 = ~P05;
  311   1      }
  312          
  313          //========================================================================
  314          // º¯Êý: void timer3_int (void) interrupt TIMER3_VECTOR
  315          // ÃèÊö:  timer3ÖÐ¶Ïº¯Êý.
  316          // ²ÎÊý: none.
  317          // ·µ»Ø: none.
  318          // °æ±¾: V1.0, 2015-1-12
  319          //========================================================================
  320          void timer3_int(void) interrupt 19
  321          {
  322   1          P04 = ~P04;
C251 COMPILER V5.60.0,  main                                                               17/03/25  23:54:32  PAGE 6   

  323   1      }
  324          
  325          //========================================================================
  326          // º¯Êý: void timer4_int (void) interrupt TIMER4_VECTOR
  327          // ÃèÊö:  timer4ÖÐ¶Ïº¯Êý.
  328          // ²ÎÊý: none.
  329          // ·µ»Ø: none.
  330          // °æ±¾: V1.0, 2015-1-12
  331          //========================================================================
  332          void timer4_int(void) interrupt 20
  333          {
  334   1          P03 = ~P03;
  335   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       261     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
